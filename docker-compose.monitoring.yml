##############################################################################
# Setup Instructions: https://docs.influxdata.com/influxdb/v2.0/tools/grafana/
#
# Gist: set up telegraf to push to influxdb2, set up influxdb2 bucket as well as v1 auth/dbrp, use v1 auth in Grafana
#
# InfluxDB v1 DBRP Creds: grafana/secretpassword
#
# Dashboards:
# - Linux: https://grafana.com/grafana/dashboards/928
# - Windows: https://grafana.com/grafana/dashboards/1902
#
##############################################################################

version: '3.5'

services:
  telegraf:
    image: telegraf:1.17-alpine
    container_name: telegraf
    restart: unless-stopped
    env_file: .env
    hostname: nfgarmy
    cap_add:
      - SYS_PTRACE
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
    volumes:
      - ./volumes/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
  influxdb:
    image: influxdb:2.0-alpine
    container_name: influxdb
    restart: unless-stopped
    env_file: .env
    ports:
      - 8086:8086
    volumes:
      - ./volumes/influxdb/lib:/var/lib/influxdb2
      - ./volumes/influxdb/etc:/etc/influxdb2
    # Disable logging, because it writes a TON to disk
    # logging:
    #   driver: none
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    env_file: .env
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - ./volumes/grafana:/var/lib/grafana

  # chronograf:
  #  image: chronograf
  #  container_name: chronograf
  #  restart: unless-stopped
  #  env_file: .env
  #  ports:
  #    - 8888:8888
  #  volumes:
  #    - chronograf-volume:/var/lib/chronograf
  #  environment:
  #    INFLUXDB_URL: http://influxdb:8086

  # glances:
  #   image: nicolargo/glances
  #   container_name: glances
  #   restart: unless-stopped
  #   pid: 'host'
  #   ports:
  #     - '61208:61208'
  #   environment:
  #     GLANCES_OPT: '-w'
  #   volumes:
  #     - '/var/run/docker.sock:/var/run/docker.sock:ro'
  #     - './volumes/glances.conf:/glances/conf/glances.conf'
